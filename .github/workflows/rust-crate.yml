on:
  push:
  pull_request:
  schedule:
    - cron: '11 15 * * *'
jobs:
  workspace:
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain:
          - 'stable'
          - 'beta'
          - 'nightly'
          - '1.58.0'
        os:
          - 'ubuntu-24.04'
          - 'macos-13'
          - 'windows-2022'
    continue-on-error: ${{ matrix.rust_toolchain == 'nightly' }}
    runs-on: ${{ matrix.os }}
    env:
      IN_CI: '1'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SCCACHE_REGION: us-west-2
      SCCACHE_BUCKET: toolchain-tools-sccache
      SCCACHE_S3_USE_SSL: '1'
      # Prevent sccache server from stopping due to inactivity.
      SCCACHE_IDLE_TIMEOUT: '0'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          default: true
          profile: minimal
          components: clippy

      - name: Cache crates.io Index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}

      - name: Install sccache (Linux)
        if: runner.os == 'Linux'
        run: |
          python3 scripts/secure_download.py \
            https://github.com/mozilla/sccache/releases/download/v0.3.0/sccache-v0.3.0-x86_64-unknown-linux-musl.tar.gz \
            e6cd8485f93d683a49c83796b9986f090901765aa4feb40d191b03ea770311d8 \
            sccache.tar.gz
          tar -xvzf sccache.tar.gz
          mv sccache-v0.3.0-x86_64-unknown-linux-musl/sccache /home/runner/.cargo/bin/sccache
          rm -rf sccache*
          chmod +x /home/runner/.cargo/bin/sccache

      - name: Install sccache (macOS)
        if: runner.os == 'macOS'
        run: |
          python3 scripts/secure_download.py \
            https://github.com/mozilla/sccache/releases/download/v0.3.0/sccache-v0.3.0-x86_64-apple-darwin.tar.gz \
            61c16fd36e32cdc923b66e4f95cb367494702f60f6d90659af1af84c3efb11eb \
            sccache.tar.gz
          tar -xvzf sccache.tar.gz
          mv sccache-v0.3.0-x86_64-apple-darwin/sccache /Users/runner/.cargo/bin/sccache
          rm -rf sccache*
          chmod +x /Users/runner/.cargo/bin/sccache

      - name: Install sccache (Windows)
        if: steps.cache-sccache-windows.outputs.cache-hit != 'true' && runner.os == 'Windows'
        run: |
          python3 scripts/secure_download.py https://github.com/mozilla/sccache/releases/download/v0.3.0/sccache-v0.3.0-x86_64-pc-windows-msvc.tar.gz f25e927584d79d0d5ad489e04ef01b058dad47ef2c1633a13d4c69dfb83ba2be sccache.tar.gz
          tar -xvzf sccache.tar.gz
          mv sccache-v0.3.0-x86_64-pc-windows-msvc/sccache.exe C:/Users/runneradmin/.cargo/bin/sccache.exe

      - name: Start sccache
        run: |
          sccache --start-server

      - name: Build Workspace
        env:
          RUSTC_WRAPPER: sccache
        run: |
          rustc --version
          cargo build --workspace
          cargo test --workspace --no-run

      - name: Test Workspace
        env:
          RUSTC_WRAPPER: sccache
        run: |
          cargo test --workspace

      - uses: actions-rs/clippy@master
        if: ${{ matrix.rust_toolchain == 'stable' || matrix.rust_toolchain == 'beta' }}
        env:
          RUSTC_WRAPPER: sccache
        with:
          args: --workspace

      - name: Stop sccache
        run: |
          sccache --stop-server
